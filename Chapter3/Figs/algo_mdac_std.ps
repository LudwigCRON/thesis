%!PS-Adobe-3.0 EPSF-3.0
%%Title: algo_mdac_std.ps
%%Creator: XCircuit v3.8 rev78
%%CreationDate: Tue Mar 13 16:52:58 2018
%%Pages: 1
%%BoundingBox: 68 68 399 268
%%DocumentNeededResources: font Helvetica Times-Roman Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.8
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-2012)
%
%%BeginResource: procset XCIRCproc 3.8 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/MR { /twidth exch def } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg
	/rotval exch def /twidth 100000 def /just exch def just 384 and
	0 gt {/mshow {pop} def} {/mshow {show} def} ifelse just 16 and 0
	gt {gsave rotval rotate 0 1 dtransform gsave pagemat setmatrix
	idtransform exch grestore 1 0 dtransform gsave pagemat setmatrix
	idtransform exch grestore dup abs 1e-9 lt {pop mul 0 gt} {3 1 roll
	pop pop 0 lt} ifelse grestore {-1 /rotval rotval neg def /just just
	dup 3 and 1 ne {3 xor} if def} {1} ifelse exch -1e-9 lt {-1 /rotval
	rotval neg def /just just dup 12 and 4 ne {12 xor} if def} {1}
	ifelse scale } if /showflag 0 def /fspc pspc def /Bline 0 def /Tabs
	0 array def /fscale 1.0 def /kY 0 def gsave dup 1 add copy dup
	1 0 dtransform exch atan rotate {exch dup type /stringtype eq {gsave
        dup gsave newpath 0 0 moveto true charpath flattenpath pathbbox pop
	exch pop exch pop grestore currentpoint pop add twidth
	ge {grestore CR exch 1 add dup 2 add {CR} exch 1 roll exch} {grestore}
	ifelse true charpath flattenpath} {dup type /arraytype eq {exec} {12
	string cvs true charpath flattenpath} ifelse} ifelse} repeat exch pop
	pathbbox grestore 3 -1 roll pop 3 1 roll just 1 and 0 gt {just 2 and
	0 gt {exch pop neg fspc sub} {exch sub 0.5 mul neg} ifelse} {pop neg
	fspc add} ifelse exch Bline exch just 4 and 0 gt {just 8 and 0 gt
	{exch pop neg fspc sub} {add 0.5 mul neg} ifelse} {pop neg fspc add}
	ifelse rotval rotate Kn currentpoint translate /showflag 1 def /Bline
	0 def /Tabs 0 array def /fscale 1.0 def /kY 0 def {dup type
	/stringtype eq {mshow} {dup type /arraytype eq {exec} {12 string cvs
	mshow} ifelse} ifelse} repeat grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/analog::polarized {
begingate
1 2.000 0 -64 0 -6 2 polygon
1 2.000 0 64 0 6 2 polygon
1 2.000 -32 6 32 6 2 polygon
1 2.000 0 -80 74 66.000 114.000 xcarc
1.000 0.000 0.000 scb
(t) {/Times-Roman cf} 2 9 0 1.000 0 64 pinlabel
(b) {/Times-Roman cf} 2 13 0 1.000 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:C%i %pt %pb 1.0P) {/Times-Roman cf} 2 0 0 1.000 -208 -160 infolabel
(sim:e %pt %pb %pb) {/Times-Roman cf} 2 0 0 1.000 -208 -208 infolabel
endgate
} def

/analog::opamp {
begingate
0 2.000 -80 -80 -80 80 80 0 3 polygon
1.000 0.000 0.000 scb
(in.m) {/Times-Roman cf} 2 7 0 1.000 -80 48 pinlabel
(in.p) {/Times-Roman cf} 2 7 0 1.000 -80 -48 pinlabel
(out) {/Times-Roman cf} 2 4 0 1.000 80 0 pinlabel
sce
1 2.000 -64 36 -48 36 2 polygon
1 2.000 -64 -36 -48 -36 2 polygon
1 2.000 -56 -44 -56 -28 2 polygon
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.000 0 0 pinlabel
endgate
} def

/generic::circle {
% trivial
begingate
1 2.000 16 0 6 0.000 360.000 xcarc
1 2.000 0 0 10 0 2 polygon
1.000 0.000 0.000 scb
(out) {/Times-Roman cf} 2 4 0 1.000 16 0 pinlabel
(out) {/Times-Roman cf} 2 7 0 1.000 0 0 pinlabel
endgate
} def

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/analog::switch {
% trivial
begingate
1 2.600 32 32 2 -43 2 polygon
1 0.600 0 -48 57 49.000 90.000 xcarc
-1.000 /sv 90 0 -64 generic::circle
0.600 /sv 270 -12 8 generic::arrowhead
1.000 90 0 48 generic::circle
1.000 0.000 0.000 scb
(sw.1) {/Times-Roman cf} 2 9 0 1.000 0 48 pinlabel
(sw.2) {/Times-Roman cf} 2 13 0 1.000 0 -64 pinlabel
endgate
} def

/analog::gnd {
% trivial
begingate
1 2.000 0 0 0 -32 2 polygon
1 2.000 -32 -32 32 -32 2 polygon
1 2.000 -18 -46 18 -46 2 polygon
1 2.000 -4 -60 4 -60 2 polygon
0.933 0.604 0.000 scb
(GND) {/Times-Roman cf} 2 1 0 1.000 0 0 pinglobal
endgate
} def

/::sw_close {
begingate
1.000 90 0 56 generic::circle
1.000 270 0 -56 generic::circle
1 2.600 -8 40 -8 -40 2 polygon
endgate
} def


%%EndSetup

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 32.00 4.00 gridspace
1.0000 inchscale
2.6000 setlinewidth 487 325 translate

1.000 90 64 96 analog::polarized
1.000 90 64 192 analog::polarized
0.400 0.400 0.400 scb
(S) {ss} (C) {/Helvetica cf} 4 16 0 0.800 80 116 label
(F) {ss} (C) {/Helvetica cf} 4 16 0 0.800 80 212 label
sce
0.750 0 252 72 analog::opamp
1 2.000 128 192 128 96 192 96 3 polygon
1 2.000 312 72 384 72 2 polygon
1 2.000 352 72 352 192 272 192 3 polygon
1 2.000 224 192 128 192 2 polygon
1.000 0 352 72 generic::dot
0.500 270 128 256 analog::switch
1 2.000 160 256 352 256 352 192 3 polygon
1.000 180 -152 144 generic::circle
1.000 0 384 72 generic::circle
(RES) {ss} (V) {/Helvetica cf} 4 16 0 1.000 416 56 label
(IN) {ss} (V) {/Helvetica cf} 4 16 0 1.000 -240 136 label
0.500 180 16 48 analog::switch
1 2.000 16 80 16 96 2 polygon
1 2.000 64 -32 -32 -32 -16 0 48 0 64 -32 5 polygon
1 2.000 16 0 16 24 2 polygon
(MUX) {/Helvetica cf} 2 16 0 0.500 -8 -24 label
1.000 90 -16 -48 generic::circle
1.000 90 16 -48 generic::circle
1.000 90 48 -48 generic::circle
1 2.000 48 -48 48 -32 2 polygon
1 2.000 16 -48 16 -32 2 polygon
1 2.000 -16 -48 -16 -32 2 polygon
(REF) {ss} (V) {/Helvetica cf} 4 16 225 0.500 72 -108 label
(CM) {ss} (V) {/Helvetica cf} 4 16 45 0.500 4 -88 label
0.500 0 128 40 analog::gnd
1 2.000 192 48 128 48 128 40 3 polygon
0.500 270 128 320 analog::switch
1 2.000 160 320 352 320 352 256 3 polygon
1 2.000 104 320 -32 320 -32 96 0 96 4 polygon
1 2.000 -56 192 0 192 2 polygon
1 2.000 -56 96 -32 96 2 polygon
1.000 0 16 192 generic::dot
1.000 0 16 96 generic::dot
1.000 0 128 96 generic::dot
1.000 0 128 192 generic::dot
1.000 0 352 256 generic::dot
1.000 0 352 192 generic::dot
(REF) {ss} (V) {/Helvetica cf} 4 16 225 0.500 12 -108 label
(-) {/Helvetica cf} 2 16 45 0.500 -32 -84 label
(+) {/Helvetica cf} 2 16 225 0.500 40 -84 label
(1) {ss} (F) {/Symbol cf} 4 16 0 0.800 80 352 label
(2) {ss} (F) {/Symbol cf} 4 16 0 0.800 112 280 label
(.) {/Helvetica cf} 2 16 0 1.000 116 360 label
0.000 0.000 1.000 scb
(S) {/Helvetica cf} {ss} (F) {/Symbol cf} 5 16 0 0.800 -76 212 label
(S) {/Helvetica cf} {ss} (F) {/Symbol cf} 5 16 0 0.800 -76 116 label
(S) {/Helvetica cf} {ss} (F) {/Symbol cf} 5 16 0 0.800 252 212 label
sce
(S) {/Helvetica cf} {ss} (F) {/Symbol cf} 5 16 0 0.800 136 352 label
1 1.300 136 380 168 380 2 polygon
0.000 0.000 1.000 scb
(1) {ss} (F) {/Symbol cf} 4 16 0 0.800 196 212 label
(.) {/Helvetica cf} 2 16 0 1.000 232 220 label
(1) {ss} (F) {/Symbol cf} 4 16 0 0.800 -128 212 label
(.) {/Helvetica cf} 2 16 0 1.000 -92 220 label
(1) {ss} (F) {/Symbol cf} 4 16 0 0.800 -128 116 label
(.) {/Helvetica cf} 2 16 0 1.000 -92 124 label
sce
1 2.000 -108 96 -136 96 -136 192 -108 192 4 polygon
1 2.000 -156 144 -136 144 2 polygon
1.000 0 -136 144 generic::dot
(X) {ss} (V) {/Helvetica cf} 4 16 0 0.800 -24 336 label
(1) {ss} (F) {/Symbol cf} 4 16 0 0.800 120 -56 label
(2) {ss} (F) {/Symbol cf} 4 16 0 0.800 120 -88 label
(S) {/Helvetica cf} {ss} (F) {/Symbol cf} 5 16 0 0.800 120 -124 label
1 1.300 168 -60 192 -60 200 -32 224 -32 232 -60 264 -60 272 -32 296 -32 304 -60 
336 -60 344 -32 368 -32 376 -60 408 -60 416 -32 15 polygon
1 1.300 204 -96 228 -96 236 -68 260 -68 268 -96 300 -96 308 -68 332 -68 340 -96 
372 -96 380 -68 404 -68 412 -96 444 -96 452 -68 15 polygon
1 1.300 204 -96 192 -96 188 -72 168 -72 4 polygon
1 1.300 416 -32 440 -32 448 -60 452 -60 4 polygon
1 1.300 168 -128 188 -128 196 -104 264 -104 272 -128 452 -128 6 polygon
1 1.300 452 -128 472 -128 480 -104 548 -104 556 -128 5 polygon
1 1.300 456 -60 480 -60 488 -32 512 -32 520 -60 552 -60 560 -32 7 polygon
1 1.300 420 -96 444 -96 452 -68 476 -68 484 -96 516 -96 524 -68 548 -68 8 
polygon
1 1.300 456 -60 448 -60 2 polygon
1 1.300 548 -68 556 -96 2 polygon
1 1.300 556 -96 560 -96 2 polygon
1 1.300 560 -32 568 -32 2 polygon
1 1.300 560 -96 568 -96 2 polygon
1 1.300 556 -128 568 -128 2 polygon
1 2.000 16 192 16 256 104 256 3 polygon
1.000 0 -32 96 generic::dot
0.500 0 -120 28 analog::opamp
0.500 0 -120 -56 analog::opamp
1.000 180 -192 48 generic::circle
1.000 180 -192 -36 generic::circle
1 2.000 -192 48 -160 48 2 polygon
1 2.000 -192 -36 -160 -36 2 polygon
1 2.000 -160 8 -188 8 2 polygon
1.000 0 -188 8 generic::dot
0.500 90 -20 -4 generic::arrowhead
0.000 0.000 1.000 scb
0.500 90 -80 96 ::sw_close
0.500 90 -80 192 ::sw_close
0.500 90 248 192 ::sw_close
sce
0.500 90 -28 -20 generic::arrowhead
1 2.000 -160 -76 -188 -76 -188 72 3 polygon
1 2.000 -80 28 -64 28 -64 -4 -32 -4 4 polygon
1 2.000 -80 -56 -64 -56 -64 -20 -40 -20 4 polygon
1 2.000 -188 72 -188 80 -32 80 -32 96 4 polygon
(/2) {/Helvetica cf} 2 16 180 0.500 -224 56 label
(REF) {ss} (V) {/Helvetica cf} 4 16 360 0.500 -284 44 label
(+) {/Helvetica cf} 2 16 360 0.500 -295 44 label
(/2) {/Helvetica cf} 2 16 180 0.500 -224 -28 label
(REF) {ss} (V) {/Helvetica cf} 4 16 360 0.500 -284 -40 label
(-) {/Helvetica cf} 2 16 180 0.500 -284 -32 label
(/4) {/Helvetica cf} 2 16 225 0.500 84 -124 label
(/4) {/Helvetica cf} 2 16 225 0.500 24 -124 label
(2) {ss} (F) {/Symbol cf} 4 16 0 0.800 -48 40 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
