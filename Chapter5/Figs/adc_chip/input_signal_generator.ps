%!PS-Adobe-3.0 EPSF-3.0
%%Title: input_signal_generator.ps
%%Creator: XCircuit v3.9 rev73
%%CreationDate: Wed Jul 18 17:28:14 2018
%%Pages: 1
%%BoundingBox: 68 68 774 325
%%DocumentNeededResources: font Helvetica Times-Roman Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.9
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--4/12/16  (tim@opencircuitdesign.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-2012)
%  Open Circuit Design (2012-2016)
%
%%BeginResource: procset XCIRCproc 3.9 1
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } if } def
/ol { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/MR { /twidth exch def } def
/CRx { } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto CRx } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg
	/rotval exch def /twidth 100000 def /just exch def just 128 and
	0 gt {/mshow {pop} def} {/mshow {show} def} ifelse just 16 and 0
	gt {gsave rotval rotate 0 1 dtransform gsave pagemat setmatrix
	idtransform exch grestore 1 0 dtransform gsave pagemat setmatrix
	idtransform exch grestore dup abs 1e-9 lt {pop mul 0 gt} {3 1 roll
	pop pop 0 lt} ifelse grestore {-1 /rotval rotval neg def /just just
	dup 3 and 1 ne {3 xor} if def} {1} ifelse exch -1e-9 lt {-1 /rotval
	rotval neg def /just just dup 12 and 4 ne {12 xor} if def} {1}
	ifelse scale } if /showflag 0 def /fspc pspc def /Bline 0 def
	/numlines 0 def /padding 0 array def /Tabs 0 array def
	/fscale 1.0 def /kY 0 def gsave /CRx { linewid padding
	aload pop numlines 1 add dup /numlines exch def array astore
	/padding exch def /linewid 0 def } def dup 1 add copy dup 1 0
	dtransform exch atan rotate {exch dup type /stringtype eq {gsave dup
	gsave newpath 0 0 moveto true charpath flattenpath pathbbox pop exch
	pop exch pop grestore currentpoint pop add dup /linewid exch def twidth
	ge {grestore CR exch 1 add dup 2 add {CR} exch 1 roll exch} {grestore}
	ifelse true charpath flattenpath} {dup type /arraytype eq {exec} {12
	string cvs true charpath flattenpath} ifelse} ifelse} repeat
	CRx /CRx {padding aload pop just 1280 and 0 gt {blockwid exch sub just
	1024 and 0 gt {0.5 mul} if} {pop 0} ifelse 0 rmoveto numlines 1 sub
	dup /numlines exch def array astore /padding exch def} def exch pop
	pathbbox grestore 4 copy pop exch pop exch sub /blockwid exch def
	3 -1 roll pop 3 1 roll just 1 and 0 gt {just 2 and
	0 gt {exch pop neg fspc sub} {exch sub 0.5 mul neg} ifelse} {pop neg
	fspc add} ifelse exch Bline exch just 4 and 0 gt {just 8 and 0 gt
	{exch pop neg fspc sub} {add 0.5 mul neg} ifelse} {pop neg fspc add}
	ifelse rotval rotate Kn currentpoint translate /showflag 1 def /Bline
	0 def /Tabs 0 array def /fscale 1.0 def /kY 0 def CRx {dup type
	/stringtype eq {mshow} {dup type /arraytype eq {exec} {12 string cvs
	mshow} ifelse} ifelse} repeat grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog
% XCircuit output starts here.

%%BeginSetup

/analog::source {
% hidden
begingate
1 1.000 0 0 32 0.000 360.000 xcarc
1 1.000 0 32 0 64 2 polygon
1 1.000 0 -32 0 -64 2 polygon
endgate
} def

/analog::vsource {
begingate
1.000 0.000 0 0 analog::source
(+) {/Symbol cf} 2 5 0.000 1.000 0 14 label
(-) {/Symbol cf} 2 5 0.000 1.000 0 -22 label
1.000 0.000 0.000 scb
(v.p) {/Times-Roman cf} 2 9 0.000 1.000 0 64 pinlabel
(v.m) {/Times-Roman cf} 2 13 0.000 1.000 0 -64 pinlabel
endgate
} def

/analog::gnd {
% trivial
begingate
1 1.000 0 0 0 -32 2 polygon
1 1.000 -32 -32 32 -32 2 polygon
1 1.000 -18 -46 18 -46 2 polygon
1 1.000 -4 -60 4 -60 2 polygon
0.933 0.604 0.000 scb
(GND) {/Times-Roman cf} 2 1 0.000 1.000 0 0 pinglobal
endgate
} def

/generic::circle {
% trivial
begingate
1 1.000 16 0 6 0.000 360.000 xcarc
1 1.000 0 0 10 0 2 polygon
1.000 0.000 0.000 scb
(out) {/Times-Roman cf} 2 4 -0.000 1.000 16 0 pinlabel
(out) {/Times-Roman cf} 2 7 -0.000 1.000 0 0 pinlabel
endgate
} def

/analog::opamp {
begingate
0 1.000 -80 -80 -80 80 80 0 3 polygon
(-) {/Symbol cf} 2 5 0.000 1.000 -61 42 label
(+) {/Symbol cf} 2 5 0.000 1.000 -61 -50 label
1.000 0.000 0.000 scb
(in.m) {/Times-Roman cf} 2 7 0.000 1.000 -80 48 pinlabel
(in.p) {/Times-Roman cf} 2 7 0.000 1.000 -80 -48 pinlabel
(out) {/Times-Roman cf} 2 4 0.000 1.000 80 0 pinlabel
endgate
} def

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def


%%EndSetup

%%Page: XC5540.oX0k64 1
%%PageOrientation: Portrait
/pgsave save def bop
% 32.00 8.00 gridspace
1.0000 inchscale
2.6000 setlinewidth 544 248 translate

1.000 0.000 -224 320 analog::vsource
1.000 0.000 -224 288 analog::gnd
(refp) {ss} (V) {/Helvetica cf} 4 16 0.000 1.000 -336 336 label
(refm) {ss} (V) {/Helvetica cf} 4 16 0.000 1.000 -16 336 label
(cm) {ss} (V) {/Helvetica cf} 4 16 0.000 1.000 -160 336 label
1.000 0.000 -64 320 analog::vsource
1.000 0.000 -64 288 analog::gnd
1.000 0.000 112 320 analog::vsource
1.000 0.000 112 288 analog::gnd
(0.4 V) {/Helvetica cf} 2 16 0.000 0.600 16 288 label
(1.4 V) {/Helvetica cf} 2 16 0.000 0.600 -320 288 label
(/2}) {ns} (DD) {ss} ({V) {/Helvetica cf} 6 16 0.000 0.600 -176 288 label
1.000 0.000 -224 512 analog::vsource
1.000 0.000 -224 480 analog::gnd
(DDA) {ss} (V) {/Helvetica cf} 4 16 0.000 1.000 -352 528 label
(}) {ns} (DD) {ss} ({V) {/Helvetica cf} 6 16 0.000 0.600 -320 480 label
1.000 270.000 -224 576 generic::circle
1.000 270.000 -224 384 generic::circle
1.000 270.000 -64 384 generic::circle
1.000 270.000 112 384 generic::circle
-1.000 180.000 400 528 analog::opamp
1 1.000 384 576 480 576 2 polygon
1 1.000 384 480 480 480 2 polygon
(inp) {ss} (V) {/Helvetica cf} 4 16 0.000 1.000 480 480 label
(inm) {ss} (V) {/Helvetica cf} 4 16 0.000 1.000 480 576 label
1 1.000 320 576 112 576 2 polygon
1.000 180.000 272 480 generic::circle
1 1.000 272 480 320 480 2 polygon
(cm) {ss} (V) {/Helvetica cf} 4 16 0.000 1.000 176 464 label
1.000 0.000 112 512 analog::vsource
1.000 0.000 112 480 analog::gnd
(signal_generator.v) {/Helvetica cf} 2 16 0.000 0.600 -128 480 label
( = 1.8 V) {ns} (DD) {ss} (.param V) {/Helvetica cf} 6 16 0.000 1.000 208 160 
label
1 1.000 960 0 1408 0 2 polygon
1 1.000 960 0 960 448 2 polygon
1 1.000 1408 0 1472 0 2 polygon
1.000 90.000 1488 0 generic::arrowhead
1.000 0.000 960 464 generic::arrowhead
1 1.000 992 0 992 16 2 polygon
1 1.000 1000 0 1000 8 2 polygon
1 1.000 1008 0 1008 8 2 polygon
1 1.000 1016 0 1016 8 2 polygon
1 1.000 1024 0 1024 16 2 polygon
1 1.000 968 0 968 8 2 polygon
1 1.000 976 0 976 8 2 polygon
1 1.000 984 0 984 8 2 polygon
1 1.000 1032 0 1032 8 2 polygon
1 1.000 1040 0 1040 8 2 polygon
1 1.000 1048 0 1048 8 2 polygon
1 1.000 1056 0 1056 16 2 polygon
1 1.000 1064 0 1064 8 2 polygon
1 1.000 1072 0 1072 8 2 polygon
1 1.000 1080 0 1080 8 2 polygon
1 1.000 1088 0 1088 16 2 polygon
1 1.000 1096 0 1096 8 2 polygon
1 1.000 1104 0 1104 8 2 polygon
1 1.000 1112 0 1112 8 2 polygon
1 1.000 1120 0 1120 16 2 polygon
1 1.000 1128 0 1128 8 2 polygon
1 1.000 1136 0 1136 8 2 polygon
1 1.000 1144 0 1144 8 2 polygon
1 1.000 1152 0 1152 16 2 polygon
1 1.000 1160 0 1160 8 2 polygon
1 1.000 1168 0 1168 8 2 polygon
1 1.000 1176 0 1176 8 2 polygon
1 1.000 1184 0 1184 16 2 polygon
1 1.000 1192 0 1192 8 2 polygon
1 1.000 1200 0 1200 8 2 polygon
1 1.000 1208 0 1208 8 2 polygon
1 1.000 1216 0 1216 16 2 polygon
1 1.000 1224 0 1224 8 2 polygon
1 1.000 1232 0 1232 8 2 polygon
1 1.000 1240 0 1240 8 2 polygon
1 1.000 1248 0 1248 16 2 polygon
1 1.000 1256 0 1256 8 2 polygon
1 1.000 1264 0 1264 8 2 polygon
1 1.000 1272 0 1272 8 2 polygon
1 1.000 1280 0 1280 16 2 polygon
1 1.000 1288 0 1288 8 2 polygon
1 1.000 1296 0 1296 8 2 polygon
1 1.000 1304 0 1304 8 2 polygon
1 1.000 1312 0 1312 16 2 polygon
1 1.000 1320 0 1320 8 2 polygon
1 1.000 1328 0 1328 8 2 polygon
1 1.000 1336 0 1336 8 2 polygon
1 1.000 1344 0 1344 16 2 polygon
1 1.000 1352 0 1352 8 2 polygon
1 1.000 1360 0 1360 8 2 polygon
1 1.000 1368 0 1368 8 2 polygon
1 1.000 1376 0 1376 16 2 polygon
1 1.000 1384 0 1384 8 2 polygon
1 1.000 1392 0 1392 8 2 polygon
1 1.000 1400 0 1400 8 2 polygon
1 1.000 1408 0 1408 16 2 polygon
1 1.000 1416 0 1416 8 2 polygon
1 1.000 1424 0 1424 8 2 polygon
1 1.000 1432 0 1432 8 2 polygon
1 1.000 1440 0 1440 16 2 polygon
1 1.000 1448 0 1448 8 2 polygon
(Time [us]) {/Helvetica cf} 2 16 0.000 1.000 1120 -48 label
1 1.000 960 224 968 224 2 polygon
(Voltage [V]) {/Helvetica cf} 2 16 270.000 1.000 832 120 label
(/2}) {ns} (DD) {ss} ({V) {/Helvetica cf} 6 16 0.000 0.600 880 216 label
(/2}) {ns} (DD) {ss} ({V) {/Helvetica cf} 6 16 0.000 0.600 792 56 label
(/2}) {ns} (DD) {ss} ({V) {/Helvetica cf} 6 16 0.000 0.600 792 376 label
(+ 0.5 V) {/Helvetica cf} 2 16 0.000 0.600 872 376 label
(- 0.5 V) {/Helvetica cf} 2 16 0.000 0.600 872 56 label
1 1.000 960 384 968 384 2 polygon
1 1.000 960 64 968 64 2 polygon
1 1.000 968 64 992 64 1432 400 3 polygon
1 1.000 1120 328 1128 328 1128 344 1160 344 1160 360 1192 360 1192 376 1224 376 
1224 392 1256 392 1256 408 1272 408 12 polygon
(V = LSB/5) {/Helvetica cf} (D) {/Symbol cf} 4 16 0.000 0.800 1104 416 label
1 1.000 1192 400 104 0.000 360.000 xcarc
1 1.000 1192 400 120 0.000 360.000 xcarc
1 1.000 1272 408 1288 408 1288 424 3 polygon
(s) {ss} (T = 1/F) {/Helvetica cf} (D) {/Symbol cf} 6 16 0.000 0.800 1120 448 
label
(T) {/Helvetica cf} (D) {/Symbol cf} 4 16 0.000 0.600 1192 312 label
(V) {/Helvetica cf} (D) {/Symbol cf} 4 16 0.000 0.600 1112 360 label
5 0.500 1192 376 1144 376 2 polygon
5 0.500 1344 120 1328 120 2 polygon
5 0.500 1192 360 1192 328 2 polygon
5 0.500 1224 376 1224 328 2 polygon
1 1.000 968 384 992 384 1432 48 3 polygon
1 0.750 1312 320 1304 344 1304 304 1312 400 spline
1 0.750 1280 280 1264 296 1296 296 1184 280 spline
( = 20 MHz) {ns} (s) {ss} (.param F) {/Helvetica cf} 6 16 0.000 1.000 208 208 
label
(V) {/Helvetica cf} (m) {/Symbol cf} (.param LSB = 244 ) {/Helvetica cf} 6 16 
0.000 1.000 208 256 label
5 0.500 992 16 992 464 2 polygon
(start-up) {ss} (T) {/Helvetica cf} 4 16 0.000 1.000 944 480 label
( = 400 ns) {ns} (start-up) {ss} (.param T) {/Helvetica cf} 6 16 0.000 1.000 
208 304 label
1.000 0.000 -224 64 analog::vsource
(p) {ss} (clk) {/Helvetica cf} 4 16 0.000 1.000 -320 96 label
{ns} (s) {ss} (F = OSR F) {/Helvetica cf} 5 16 0.000 0.600 -176 88 label
(1.1 V) {/Helvetica cf} 2 16 0.000 0.600 -112 56 label
1.000 0.000 -224 32 analog::gnd
1 1.000 -176 32 -168 64 -152 64 -144 32 -128 32 -120 64 6 polygon
(0.7 V) {/Helvetica cf} 2 16 0.000 0.600 -112 32 label
1.000 270.000 -224 128 generic::circle
1.000 0.000 128 32 analog::vsource
1 1.000 128 0 64 0 2 polygon
1 1.000 128 64 64 64 2 polygon
1.000 180.000 64 0 generic::circle
1 1.000 128 -32 64 -32 64 0 3 polygon
(cm) {ss} (V) {/Helvetica cf} 4 16 0.000 1.000 -32 -8 label
(p) {ss} (clk) {/Helvetica cf} 4 16 0.000 1.000 -32 56 label
1.000 180.000 64 64 generic::circle
(m) {ss} (clk) {/Helvetica cf} 4 16 0.000 1.000 96 128 label
1.000 270.000 128 96 generic::circle
(gain = -1) {/Helvetica cf} 2 16 0.000 0.600 168 24 label
(.param OSR = 5) {/Helvetica cf} 2 16 0.000 1.000 208 352 label
(inp) {ss} (V) {/Helvetica cf} 4 16 0.000 1.000 1440 392 label
(inm) {ss} (V) {/Helvetica cf} 4 16 0.000 1.000 1440 32 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
