%!PS-Adobe-3.0 EPSF-3.0
%%Title: tb_adc_full.ps
%%Creator: XCircuit v3.9 rev73
%%CreationDate: Wed Jul 18 17:22:42 2018
%%Pages: 1
%%BoundingBox: 68 68 794 230
%%DocumentNeededResources: font Helvetica Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.9
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--4/12/16  (tim@opencircuitdesign.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-2012)
%  Open Circuit Design (2012-2016)
%
%%BeginResource: procset XCIRCproc 3.9 1
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } if } def
/ol { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/MR { /twidth exch def } def
/CRx { } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto CRx } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg
	/rotval exch def /twidth 100000 def /just exch def just 128 and
	0 gt {/mshow {pop} def} {/mshow {show} def} ifelse just 16 and 0
	gt {gsave rotval rotate 0 1 dtransform gsave pagemat setmatrix
	idtransform exch grestore 1 0 dtransform gsave pagemat setmatrix
	idtransform exch grestore dup abs 1e-9 lt {pop mul 0 gt} {3 1 roll
	pop pop 0 lt} ifelse grestore {-1 /rotval rotval neg def /just just
	dup 3 and 1 ne {3 xor} if def} {1} ifelse exch -1e-9 lt {-1 /rotval
	rotval neg def /just just dup 12 and 4 ne {12 xor} if def} {1}
	ifelse scale } if /showflag 0 def /fspc pspc def /Bline 0 def
	/numlines 0 def /padding 0 array def /Tabs 0 array def
	/fscale 1.0 def /kY 0 def gsave /CRx { linewid padding
	aload pop numlines 1 add dup /numlines exch def array astore
	/padding exch def /linewid 0 def } def dup 1 add copy dup 1 0
	dtransform exch atan rotate {exch dup type /stringtype eq {gsave dup
	gsave newpath 0 0 moveto true charpath flattenpath pathbbox pop exch
	pop exch pop grestore currentpoint pop add dup /linewid exch def twidth
	ge {grestore CR exch 1 add dup 2 add {CR} exch 1 roll exch} {grestore}
	ifelse true charpath flattenpath} {dup type /arraytype eq {exec} {12
	string cvs true charpath flattenpath} ifelse} ifelse} repeat
	CRx /CRx {padding aload pop just 1280 and 0 gt {blockwid exch sub just
	1024 and 0 gt {0.5 mul} if} {pop 0} ifelse 0 rmoveto numlines 1 sub
	dup /numlines exch def array astore /padding exch def} def exch pop
	pathbbox grestore 4 copy pop exch pop exch sub /blockwid exch def
	3 -1 roll pop 3 1 roll just 1 and 0 gt {just 2 and
	0 gt {exch pop neg fspc sub} {exch sub 0.5 mul neg} ifelse} {pop neg
	fspc add} ifelse exch Bline exch just 4 and 0 gt {just 8 and 0 gt
	{exch pop neg fspc sub} {add 0.5 mul neg} ifelse} {pop neg fspc add}
	ifelse rotval rotate Kn currentpoint translate /showflag 1 def /Bline
	0 def /Tabs 0 array def /fscale 1.0 def /kY 0 def CRx {dup type
	/stringtype eq {mshow} {dup type /arraytype eq {exec} {12 string cvs
	mshow} ifelse} ifelse} repeat grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog
% XCircuit output starts here.

%%BeginSetup

/analog::resistor {
begingate
1 1.000 0 64 0 36 2 polygon
1 1.000 0 -64 0 -36 2 polygon
1 1.000 0 -36 14 -30 -14 -18 14 -6 -14 6 14 18 -14 30 0 36 8 polygon
1.000 0.000 0.000 scb
(r.1) {/Times-Roman cf} 2 9 0.000 1.000 0 64 pinlabel
(r.2) {/Times-Roman cf} 2 13 0.000 1.000 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:R%i %pr.1 %pr.2 1.0K) {/Times-Roman cf} 2 0 0.000 1.000 -208 -160 
infolabel
(sim:r %pr.1 %pr.2) {/Times-Roman cf} 2 0 0.000 1.000 -208 -208 infolabel
endgate
} def

/analog::inductor {
begingate
1 1.000 20 -22 20 -38 0 -42 0 -18 spline
1 1.000 -20 -14 -20 -26 0 -22 0 -18 spline
1 1.000 20 38 20 22 0 18 0 42 spline
1 1.000 20 18 20 2 0 -2 0 22 spline
1 1.000 20 -2 20 -18 0 -22 0 2 spline
1 1.000 -20 26 -20 14 0 18 0 22 spline
1 1.000 -20 6 -20 -6 0 -2 0 2 spline
1 1.000 0 -42 0 -64 2 polygon
1 1.000 0 42 0 64 2 polygon
1.000 0.000 0.000 scb
(l.1) {/Times-Roman cf} 2 9 0.000 1.000 0 64 pinlabel
(l.2) {/Times-Roman cf} 2 13 0.000 1.000 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:L%i %pl.1 %pl.2 1.0U) {/Times-Roman cf} 2 0 0.000 1.000 -208 -160 
infolabel
(sim:l %pl.1 %pl.2) {/Times-Roman cf} 2 0 0.000 1.000 -208 -208 infolabel
endgate
} def

/analog::gnd {
% trivial
begingate
1 1.000 0 0 0 -32 2 polygon
1 1.000 -32 -32 32 -32 2 polygon
1 1.000 -18 -46 18 -46 2 polygon
1 1.000 -4 -60 4 -60 2 polygon
0.933 0.604 0.000 scb
(GND) {/Times-Roman cf} 2 1 0.000 1.000 0 0 pinglobal
endgate
} def

/analog::vdd {
% trivial
begingate
1 1.000 0 0 0 32 2 polygon
1 1.000 -32 32 32 32 2 polygon
0.933 0.604 0.000 scb
(Vdd) {/Times-Roman cf} 2 13 0.000 1.000 0 0 pinglobal
sce
(}) {ns} (DD) {ss} ({V) {/Helvetica cf} 6 16 0.000 1.000 -44 48 label
endgate
} def

/digital::5V {
% trivial
begingate
1 1.000 -32 0 32 0 2 polygon
1 1.000 0 0 0 -32 2 polygon
0.933 0.604 0.000 scb
(dVdd) {/Times-Roman cf} 2 13 0.000 1.000 0 -32 pinglobal
sce
(3.3 V) {/Helvetica cf} 2 16 0.000 1.000 -48 12 label
endgate
} def


%%EndSetup

%%Page: tb_adc_full 1
%%PageOrientation: Portrait
/pgsave save def bop
% 32.00 4.00 gridspace
1.0000 inchscale
2.6000 setlinewidth 1020 220 translate

0 1.000 -128 352 -128 0 224 0 224 352 4 polygon
(ADC) {/Helvetica cf} 2 16 0.000 1.000 -88 208 label
(Test Chip) {/Helvetica cf} 2 16 0.000 1.000 16 208 label
(DOE_ADC) {/Helvetica cf} 2 16 0.000 1.000 -56 112 label
1.000 90.000 352 320 analog::resistor
1.000 270.000 464 320 analog::inductor
0 1.000 288 352 288 0 528 0 528 352 4 polygon
1.000 90.000 352 32 analog::resistor
1.000 270.000 464 32 analog::inductor
(Wire Bonding) {/Helvetica cf} 2 16 0.000 0.750 320 176 label
1.000 90.000 -368 320 analog::resistor
1.000 270.000 -256 320 analog::inductor
0 1.000 -432 352 -432 0 -192 0 -192 352 4 polygon
1.000 90.000 -368 32 analog::resistor
1.000 270.000 -256 32 analog::inductor
(Wire Bonding) {/Helvetica cf} 2 16 0.000 0.750 -400 176 label
1 1.000 -192 320 -128 320 2 polygon
1 1.000 -192 304 -128 304 2 polygon
1 1.000 -192 288 -128 288 2 polygon
1 1.000 -192 272 -128 272 2 polygon
1 1.000 -192 256 -128 256 2 polygon
1 1.000 -192 240 -128 240 2 polygon
1 1.000 -192 224 -128 224 2 polygon
1 1.000 -192 208 -128 208 2 polygon
1 1.000 -192 176 -128 176 2 polygon
1 1.000 -192 192 -128 192 2 polygon
1 1.000 -192 160 -128 160 2 polygon
1 1.000 -192 144 -128 144 2 polygon
1 1.000 -192 128 -128 128 2 polygon
1 1.000 -192 112 -128 112 2 polygon
1 1.000 -192 96 -128 96 2 polygon
1 1.000 -192 64 -128 64 2 polygon
1 1.000 -192 80 -128 80 2 polygon
1 1.000 -192 48 -128 48 2 polygon
1 1.000 -192 32 -128 32 2 polygon
1 1.000 224 320 288 320 2 polygon
1 1.000 224 304 288 304 2 polygon
1 1.000 224 288 288 288 2 polygon
1 1.000 224 272 288 272 2 polygon
1 1.000 224 256 288 256 2 polygon
1 1.000 224 240 288 240 2 polygon
1 1.000 224 208 288 208 2 polygon
1 1.000 224 224 288 224 2 polygon
1 1.000 224 192 288 192 2 polygon
1 1.000 224 160 288 160 2 polygon
1 1.000 224 176 288 176 2 polygon
1 1.000 224 144 288 144 2 polygon
1 1.000 224 128 288 128 2 polygon
1 1.000 224 112 288 112 2 polygon
1 1.000 224 96 288 96 2 polygon
1 1.000 224 80 288 80 2 polygon
1 1.000 224 64 288 64 2 polygon
1 1.000 224 48 288 48 2 polygon
1 1.000 224 32 288 32 2 polygon
0 1.000 -816 368 -816 272 -496 272 -496 368 4 polygon
(configurator) {/Helvetica cf} 2 16 0.000 1.000 -800 304 label
1 1.000 -496 320 -432 320 2 polygon
1 1.000 -496 304 -432 304 2 polygon
1 1.000 -496 288 -432 288 2 polygon
1 1.000 528 320 576 320 576 384 -464 384 -464 336 -496 336 6 polygon
(TX) {/Helvetica cf} 2 16 0.000 0.250 -512 320 label
(CLK) {/Helvetica cf} 2 16 0.000 0.250 -520 304 label
(VALID) {/Helvetica cf} 2 16 0.000 0.250 -528 288 label
(RX) {/Helvetica cf} 2 16 0.000 0.250 -512 336 label
(p) {ss} (clk) {/Helvetica cf} 4 16 0.000 0.750 -600 148 label
(m) {ss} (clk) {/Helvetica cf} 4 16 0.000 0.750 -600 120 label
1 1.000 -544 148 -432 148 2 polygon
1 1.000 -544 128 -432 128 2 polygon
1.000 0.000 -512 32 analog::gnd
1 1.000 -512 32 -432 32 2 polygon
(resetn) {/Helvetica cf} 2 16 0.000 0.750 -632 224 label
1 1.000 -544 232 -432 232 2 polygon
(start) {/Helvetica cf} 2 16 0.000 0.750 -608 88 label
1 1.000 -544 96 -432 96 2 polygon
(inp) {ss} (V) {/Helvetica cf} 4 16 0.000 0.750 -800 112 label
(inm) {ss} (V) {/Helvetica cf} 4 16 0.000 0.750 -800 84 label
(cm) {ss} (V) {/Helvetica cf} 4 16 0.000 0.750 -800 28 label
(refp) {ss} (V) {/Helvetica cf} 4 16 0.000 0.750 -800 56 label
(refm) {ss} (V) {/Helvetica cf} 4 16 0.000 0.750 -800 0 label
0.750 0.000 -704 200 analog::vdd
0.750 360.000 -792 224 digital::5V
1 1.000 -736 116 -704 116 -672 76 3 polygon
1 1.000 -736 88 -704 88 -672 68 -640 68 4 polygon
1 1.000 -672 76 -640 76 2 polygon
1 1.000 -736 60 -704 60 -672 60 -640 60 4 polygon
1 1.000 -736 32 -704 32 -672 52 -640 52 4 polygon
1 1.000 -736 4 -704 4 -672 44 -640 44 4 polygon
1 1.000 -640 44 -432 44 2 polygon
1 1.000 -640 52 -432 52 2 polygon
1 1.000 -640 60 -432 60 2 polygon
1 1.000 -640 68 -432 68 2 polygon
1 1.000 -640 76 -432 76 2 polygon
(resetnc) {/Helvetica cf} 2 16 0.000 0.750 -648 248 label
1 1.000 -544 256 -432 256 2 polygon
1 1.000 -704 200 -432 200 2 polygon
1 1.000 -792 200 -792 180 -432 180 3 polygon
(algo_latchQ<2:0>) {/Helvetica cf} 2 16 0.000 0.600 576 136 label
(algo_loading) {/Helvetica cf} 2 16 0.000 0.600 576 160 label
(algo_quad<1:0>) {/Helvetica cf} 2 16 0.000 0.600 576 112 label
(clk_result) {/Helvetica cf} 2 16 0.000 0.600 576 284 label
(results<17:0>) {/Helvetica cf} 2 16 0.000 0.600 576 232 label
(results_msb) {/Helvetica cf} 2 16 0.000 0.600 576 260 label
(sar_error) {/Helvetica cf} 2 16 0.000 0.600 576 88 label
(sar_warning) {/Helvetica cf} 2 16 0.000 0.600 576 64 label
(sar_loading) {/Helvetica cf} 2 16 0.000 0.600 576 40 label
(p) {ss} (residue) {/Helvetica cf} 4 16 0.000 0.600 576 208 label
(m) {ss} (residue) {/Helvetica cf} 4 16 0.000 0.600 576 184 label
1 1.000 528 288 572 288 2 polygon
1 1.000 528 264 572 264 2 polygon
1 1.000 528 236 572 236 2 polygon
1 1.000 528 212 572 212 2 polygon
1 1.000 528 188 572 188 2 polygon
1 1.000 528 168 572 168 2 polygon
1 1.000 528 140 572 140 2 polygon
1 1.000 528 116 572 116 2 polygon
1 1.000 528 92 572 92 2 polygon
1 1.000 528 68 572 68 2 polygon
1 1.000 528 40 572 40 2 polygon
0 1.000 928 352 928 160 1088 160 1088 352 4 polygon
(save) {/Helvetica cf} 2 16 0.000 1.000 964 272 label
(to) {/Helvetica cf} 2 16 0.000 1.000 960 228 label
(file) {/Helvetica cf} 2 16 0.000 1.000 1008 228 label
(clk_result) {/Helvetica cf} 2 16 0.000 0.600 776 320 label
(results<17:0>) {/Helvetica cf} 2 16 0.000 0.600 736 296 label
(inp) {ss} (V) {/Helvetica cf} 4 16 0.000 0.750 828 256 label
(inm) {ss} (V) {/Helvetica cf} 4 16 0.000 0.750 828 228 label
1 1.000 888 328 928 328 2 polygon
1 1.000 888 300 928 300 2 polygon
1 1.000 888 256 928 256 2 polygon
1 1.000 888 232 928 232 2 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
