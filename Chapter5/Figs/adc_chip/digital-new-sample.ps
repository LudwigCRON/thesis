%!PS-Adobe-3.0 EPSF-3.0
%%Title: digital-new-sample.ps
%%Creator: XCircuit v3.9 rev73
%%CreationDate: Thu Jun 21 09:42:14 2018
%%Pages: 1
%%BoundingBox: 68 68 738 274
%%DocumentNeededResources: font Helvetica Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.9
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--4/12/16  (tim@opencircuitdesign.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-2012)
%  Open Circuit Design (2012-2016)
%
%%BeginResource: procset XCIRCproc 3.9 1
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } if } def
/ol { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/MR { /twidth exch def } def
/CRx { } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto CRx } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg
	/rotval exch def /twidth 100000 def /just exch def just 128 and
	0 gt {/mshow {pop} def} {/mshow {show} def} ifelse just 16 and 0
	gt {gsave rotval rotate 0 1 dtransform gsave pagemat setmatrix
	idtransform exch grestore 1 0 dtransform gsave pagemat setmatrix
	idtransform exch grestore dup abs 1e-9 lt {pop mul 0 gt} {3 1 roll
	pop pop 0 lt} ifelse grestore {-1 /rotval rotval neg def /just just
	dup 3 and 1 ne {3 xor} if def} {1} ifelse exch -1e-9 lt {-1 /rotval
	rotval neg def /just just dup 12 and 4 ne {12 xor} if def} {1}
	ifelse scale } if /showflag 0 def /fspc pspc def /Bline 0 def
	/numlines 0 def /padding 0 array def /Tabs 0 array def
	/fscale 1.0 def /kY 0 def gsave /CRx { linewid padding
	aload pop numlines 1 add dup /numlines exch def array astore
	/padding exch def /linewid 0 def } def dup 1 add copy dup 1 0
	dtransform exch atan rotate {exch dup type /stringtype eq {gsave dup
	gsave newpath 0 0 moveto true charpath flattenpath pathbbox pop exch
	pop exch pop grestore currentpoint pop add dup /linewid exch def twidth
	ge {grestore CR exch 1 add dup 2 add {CR} exch 1 roll exch} {grestore}
	ifelse true charpath flattenpath} {dup type /arraytype eq {exec} {12
	string cvs true charpath flattenpath} ifelse} ifelse} repeat
	CRx /CRx {padding aload pop just 1280 and 0 gt {blockwid exch sub just
	1024 and 0 gt {0.5 mul} if} {pop 0} ifelse 0 rmoveto numlines 1 sub
	dup /numlines exch def array astore /padding exch def} def exch pop
	pathbbox grestore 4 copy pop exch pop exch sub /blockwid exch def
	3 -1 roll pop 3 1 roll just 1 and 0 gt {just 2 and
	0 gt {exch pop neg fspc sub} {exch sub 0.5 mul neg} ifelse} {pop neg
	fspc add} ifelse exch Bline exch just 4 and 0 gt {just 8 and 0 gt
	{exch pop neg fspc sub} {add 0.5 mul neg} ifelse} {pop neg fspc add}
	ifelse rotval rotate Kn currentpoint translate /showflag 1 def /Bline
	0 def /Tabs 0 array def /fscale 1.0 def /kY 0 def CRx {dup type
	/stringtype eq {mshow} {dup type /arraytype eq {exec} {12 string cvs
	mshow} ifelse} ifelse} repeat grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog
% XCircuit output starts here.

%%BeginSetup

/xspice::d_and2 {
<</@index (?) /@rise_delay (1.0e-9) /@fall_delay (1.0e-9) /@input_load 
(1.0e-12) >> begingate
1 2.000 64 0 96 0 2 polygon
1 2.000 -48 32 -80 32 2 polygon
1.000 0.000 0.000 scb
(A) {/Times-Roman cf} 2 23 0.000 0.700 -80 32 pinlabel
(X) {/Times-Roman cf} 2 20 0.000 0.700 96 0 pinlabel
0.180 0.545 0.341 scb
mark @index ( %%d [%pA %pB] %%d %pX d_and2_) @index (spice1:A) 
{/Times-Roman cf} ctmk 20 0.000 0.700 -112 -128 infolabel
mark (\)) @input_load ( input_load=) @fall_delay ( fall_delay=) @rise_delay 
( d_and\(rise_delay=) @index (spice2:.model d_and2_) {/Times-Roman cf} ctmk 20 
0.000 0.700 -112 -160 infolabel
sce
1 2.000 -48 -48 -48 48 2 polygon
1 2.000 -48 48 16 48 2 polygon
1 2.000 -48 -48 16 -48 2 polygon
1 2.000 16 0 48 270.000 450.000 xcarc
1 2.000 -48 -32 -80 -32 2 polygon
1.000 0.000 0.000 scb
(B) {/Times-Roman cf} 2 23 0.000 0.700 -80 -32 pinlabel
endgate
} def

/xspice::d_nor2 {
<</@index (?) /@rise_delay (1.0e-9) /@fall_delay (1.0e-9) /@input_load 
(1.0e-12) >> begingate
1 2.000 80 0 96 0 2 polygon
1 2.000 -40 32 -80 32 2 polygon
1.000 0.000 0.000 scb
(A) {/Times-Roman cf} 2 23 0.000 0.700 -80 32 pinlabel
(X) {/Times-Roman cf} 2 20 0.000 0.700 96 0 pinlabel
0.180 0.545 0.341 scb
mark @index ( %%d [%pA %pB] %%d %pX d_nor2_) @index (spice1:A) 
{/Times-Roman cf} ctmk 20 0.000 0.700 -112 -128 infolabel
mark (\)) @input_load ( input_load=) @fall_delay ( fall_delay=) @rise_delay 
( d_nor\(rise_delay=) @index (spice2:.model d_nor2_) {/Times-Roman cf} ctmk 20 
0.000 0.700 -112 -160 infolabel
sce
1 2.000 -48 48 -16 48 2 polygon
1 2.000 -40 -32 -80 -32 2 polygon
1.000 0.000 0.000 scb
(B) {/Times-Roman cf} 2 23 0.000 0.700 -80 -32 pinlabel
sce
1 2.000 -32 32 -32 -32 -48 -48 -48 48 spline
1 2.000 56 24 16 48 -16 48 64 0 spline
1 2.000 56 -24 16 -48 -16 -48 64 0 spline
1 2.000 -48 -48 -16 -48 2 polygon
1 2.000 72 0 8 0.000 360.000 xcarc
endgate
} def

/digitallib::NAND4 {
<</@gnd (dgnd) /@vdd (dvdd) /@voltage () /@index (?) >> begingate
1 2.000 0 -64 -64 -64 -64 64 0 64 4 polygon
1 2.000 56 0 8 0.000 360.000 xcarc
1 2.000 0 0 48 64 -90.000 90.000 ellipse
1.000 0.000 0.000 scb
(Y) {/Times-Roman cf} 2 4 0.000 1.000 64 0 pinlabel
(A) {/Times-Roman cf} 2 7 0.000 1.000 -64 48 pinlabel
(B) {/Times-Roman cf} 2 7 0.000 1.000 -64 16 pinlabel
(C) {/Times-Roman cf} 2 7 0.000 1.000 -64 -16 pinlabel
(D) {/Times-Roman cf} 2 7 0.000 1.000 -64 -48 pinlabel
sce
1 2.000 -64 -80 -64 80 2 polygon
0.180 0.545 0.341 scb
mark @voltage ( %pA %pB %pC %pD %pY NAND4X1) @gnd ( ) @vdd ( ) @index (spice:X) 
{/Times-Roman cf} ctmk 16 360.000 0.700 -64 -144 infolabel
mark (.cir) @voltage (spice@1:%F$XCIRCUIT_LIB_DIR/standard_cells) 
{/Times-Roman cf} ctmk 16 0.000 0.700 -64 -112 infolabel
0.647 0.165 0.165 scb
mark @voltage {/Times-Roman cf} ctmk 21 0.000 0.700 -16 16 label
endgate
} def

/xspice::d_or2 {
<</@input_load (1.0e-12) /@fall_delay (1.0e-9) /@rise_delay (1.0e-9) /@index 
(?) >> begingate
1 2.000 64 0 96 0 2 polygon
1 2.000 -40 32 -80 32 2 polygon
1.000 0.000 0.000 scb
(A) {/Times-Roman cf} 2 23 0.000 0.700 -80 32 pinlabel
(X) {/Times-Roman cf} 2 20 0.000 0.700 96 0 pinlabel
0.180 0.545 0.341 scb
mark @index ( %%d [%pA %pB] %%d %pX d_or2_) @index (spice1:A) {/Times-Roman cf} 
ctmk 20 0.000 0.700 -112 -128 infolabel
mark (\)) @input_load ( input_load=) @fall_delay ( fall_delay=) @rise_delay 
( d_or\(rise_delay=) @index (spice2:.model d_or2_) {/Times-Roman cf} ctmk 20 
0.000 0.700 -112 -160 infolabel
sce
1 2.000 -48 48 -16 48 2 polygon
1 2.000 -40 -32 -80 -32 2 polygon
1.000 0.000 0.000 scb
(B) {/Times-Roman cf} 2 23 0.000 0.700 -80 -32 pinlabel
sce
1 2.000 -32 32 -32 -32 -48 -48 -48 48 spline
1 2.000 56 24 16 48 -16 48 64 0 spline
1 2.000 56 -24 16 -48 -16 -48 64 0 spline
1 2.000 -48 -48 -16 -48 2 polygon
1 2.000 -36 0 -80 0 2 polygon
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 -0.000 1.000 0 0 pinlabel
endgate
} def

/xspice::d_dff {
<</@ic (0) /@set_load (1.0e-12) /@reset_load (1.0e-12) /@clk_load (1.0e-12) /@data_load 
(1.0e-12) /@reset_delay (1.0e-9) /@set_delay (1.0E-9) /@clk_delay 
(1.0E-9) /@fall_delay (1.0e-9\)) /@rise_delay (1.0e-9) /@index (?) >> begingate
1 2.000 -64 64 -96 64 2 polygon
1.000 0.000 0.000 scb
(D) {/Times-Roman cf} 2 23 0.000 0.700 -96 64 pinlabel
0.180 0.545 0.341 scb
mark @index ( %%d %pD %%d %pCLK %%d %pS %%d %pC %%d %pQ %%d %pQbar d_dff_) 
@index (spice1:A) {/Times-Roman cf} ctmk 20 0.000 0.700 -144 -176 infolabel
sce
0 2.000 -64 -64 -64 96 64 96 64 -64 4 polygon
1 2.000 64 64 96 64 2 polygon
1.000 0.000 0.000 scb
(Q) {/Times-Roman cf} 2 20 0.000 0.700 96 64 pinlabel
(CLK) {/Times-Roman cf} 2 23 0.000 0.700 -96 -32 pinlabel
(Qbar) {/Times-Roman cf} 2 20 0.000 0.700 96 -32 pinlabel
sce
(D) {/Times-Roman cf} 2 21 0.000 0.700 -48 64 label
1 2.000 -64 -48 -48 -32 -64 -16 3 polygon
(S) {/Times-Roman cf} 2 21 0.000 0.700 0 80 label
(Q) {/Times-Roman cf} 2 21 0.000 0.700 48 64 label
(Q) {ol} {/Times-Roman cf} 3 21 0.000 0.700 48 -32 label
1.000 0.000 0.000 scb
(C) {/Times-Roman cf} 2 29 0.000 0.700 0 -96 pinlabel
(S) {/Times-Roman cf} 2 17 0.000 0.700 0 128 pinlabel
0.180 0.545 0.341 scb
mark @reset_load ( reset_load=) @set_load ( set_load=) @clk_load ( clk_load=) 
@data_load ( data_load=) @ic (spice3:+ ic=) {/Times-Roman cf} ctmk 20 0.000 
0.700 -144 -240 infolabel
mark @fall_delay ( fall_delay=) @rise_delay (spice4:+ rise_delay=) 
{/Times-Roman cf} ctmk 20 0.000 0.700 -144 -272 infolabel
mark @reset_delay ( reset_delay=) @set_delay ( set_delay=) @clk_delay 
( d_dff\(clk_delay=) @index (spice2:.model d_dff_) {/Times-Roman cf} ctmk 20 
0.000 0.700 -144 -208 infolabel
sce
1 2.000 -96 -32 -64 -32 2 polygon
1 2.000 0 104 8 0.000 360.000 xcarc
1 2.000 0 112 0 128 2 polygon
1 2.000 72 -32 8 0.000 360.000 xcarc
1 2.000 80 -32 96 -32 2 polygon
endgate
} def


%%EndSetup

%%Page: digital-new-sample 1
%%PageOrientation: Portrait
/pgsave save def bop
% 32.00 4.00 gridspace
1.0000 inchscale
2.6000 setlinewidth 620 372 translate

1.000 0.000 -128 64 xspice::d_and2
1.000 0.000 -128 -80 xspice::d_and2
1.000 0.000 48 -112 xspice::d_nor2
1.000 0.000 544 80 digitallib::NAND4
1.000 0.000 -128 224 xspice::d_nor2
(cycle6) {/Helvetica cf} 2 16 0.000 0.800 -428 248 label
(P<4>) {/Helvetica cf} 2 16 0.000 0.800 -416 -152 label
(P<5>) {/Helvetica cf} 2 16 0.000 0.800 -416 24 label
(P<4>) {ol} {/Helvetica cf} 3 16 0.000 0.800 -416 184 label
1 2.000 -208 256 -320 256 2 polygon
1 2.000 -176 64 -288 64 -288 256 3 polygon
1 2.000 -208 96 -208 192 2 polygon
1 2.000 -208 192 -224 192 2 polygon
1 2.000 -208 -48 -208 32 -224 32 3 polygon
1 2.000 -208 -112 -288 -112 -288 64 3 polygon
1 2.000 -32 -144 -288 -144 2 polygon
1 2.000 -224 192 -320 192 2 polygon
1 2.000 -224 32 -320 32 2 polygon
1 2.000 -288 -144 -320 -144 2 polygon
1.000 0.000 272 64 xspice::d_or2
1 2.000 -32 64 192 64 2 polygon
1 2.000 144 -112 160 -112 160 32 192 32 4 polygon
1 2.000 -36 224 160 224 160 96 196 96 4 polygon
1.000 0.000 -288 256 generic::dot
1.000 0.000 -208 192 generic::dot
1.000 0.000 -208 32 generic::dot
1.000 0.000 -288 64 generic::dot
(P<1>) {ol} {/Helvetica cf} 3 16 0.000 0.800 228 216 label
(P<2>) {ol} {/Helvetica cf} 3 16 0.000 0.800 228 184 label
(P<3>) {ol} {/Helvetica cf} 3 16 0.000 0.800 228 152 label
(start) {/Helvetica cf} 2 16 0.000 0.800 272 -40 label
(resetn) {/Helvetica cf} 2 16 0.000 0.800 664 184 label
(init) {/Helvetica cf} 2 16 0.000 1.000 928 88 label
(init) {ol} {/Helvetica cf} 3 16 0.000 1.000 656 -88 label
(init2) {/Helvetica cf} 2 16 0.000 1.000 1264 68 label
(init2) {ol} {/Helvetica cf} 3 16 0.000 1.000 1264 -32 label
1 2.000 480 0 448 0 2 polygon
1 2.000 480 160 448 160 2 polygon
1 2.000 480 128 448 128 2 polygon
1 2.000 480 96 448 96 2 polygon
1 2.000 480 64 448 64 2 polygon
1 2.000 480 32 448 32 2 polygon
1 2.000 368 64 452 64 2 polygon
1 2.000 352 -32 384 -32 384 32 448 32 4 polygon
1 2.000 452 128 384 128 384 192 352 192 4 polygon
1 2.000 448 96 352 96 352 160 320 160 4 polygon
1 2.000 352 192 320 192 2 polygon
1 2.000 448 160 416 160 416 224 320 224 4 polygon
1.000 0.000 832 16 xspice::d_dff
1.000 0.000 1152 16 xspice::d_dff
1 2.000 608 80 736 80 2 polygon
1 2.000 924 80 992 80 2 polygon
1 2.000 928 -16 928 -96 448 -96 448 0 4 polygon
1 2.000 1152 144 1152 192 832 192 3 polygon
1 2.000 832 144 832 192 2 polygon
1.000 0.000 832 192 generic::dot
(clock) {/Helvetica cf} 2 16 0.000 1.000 952 -28 label
(clock) {ol} {/Helvetica cf} 3 16 0.000 1.000 632 -32 label
1 2.000 992 80 1056 80 2 polygon
1 2.000 828 192 768 192 2 polygon
4 0.500 -308 288 -308 -180 192 -180 192 288 4 polygon
4 0.500 432 256 432 -180 620 -180 620 256 4 polygon
(new sample conditions) {/Helvetica cf} 2 16 0.000 1.000 -268 304 label
(prevent the start with invalid state) {/Helvetica cf} 2 16 0.000 1.000 440 320 
label
1 1.000 564 280 524 308 524 260 564 312 spline
1 1.000 524 260 528 268 2 polygon
1 1.000 524 260 520 268 2 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
