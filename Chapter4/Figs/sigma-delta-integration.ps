%!PS-Adobe-3.0 EPSF-3.0
%%Title: sigma-delta-integration.ps
%%Creator: XCircuit v3.9 rev73
%%CreationDate: Mon Aug 27 11:38:18 2018
%%Pages: 1
%%BoundingBox: 68 68 677 234
%%DocumentNeededResources: font Helvetica Times-Roman Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.9
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--4/12/16  (tim@opencircuitdesign.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-2012)
%  Open Circuit Design (2012-2016)
%
%%BeginResource: procset XCIRCproc 3.9 1
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } if } def
/ol { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/MR { /twidth exch def } def
/CRx { } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto CRx } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg
	/rotval exch def /twidth 100000 def /just exch def just 128 and
	0 gt {/mshow {pop} def} {/mshow {show} def} ifelse just 16 and 0
	gt {gsave rotval rotate 0 1 dtransform gsave pagemat setmatrix
	idtransform exch grestore 1 0 dtransform gsave pagemat setmatrix
	idtransform exch grestore dup abs 1e-9 lt {pop mul 0 gt} {3 1 roll
	pop pop 0 lt} ifelse grestore {-1 /rotval rotval neg def /just just
	dup 3 and 1 ne {3 xor} if def} {1} ifelse exch -1e-9 lt {-1 /rotval
	rotval neg def /just just dup 12 and 4 ne {12 xor} if def} {1}
	ifelse scale } if /showflag 0 def /fspc pspc def /Bline 0 def
	/numlines 0 def /padding 0 array def /Tabs 0 array def
	/fscale 1.0 def /kY 0 def gsave /CRx { linewid padding
	aload pop numlines 1 add dup /numlines exch def array astore
	/padding exch def /linewid 0 def } def dup 1 add copy dup 1 0
	dtransform exch atan rotate {exch dup type /stringtype eq {gsave dup
	gsave newpath 0 0 moveto true charpath flattenpath pathbbox pop exch
	pop exch pop grestore currentpoint pop add dup /linewid exch def twidth
	ge {grestore CR exch 1 add dup 2 add {CR} exch 1 roll exch} {grestore}
	ifelse true charpath flattenpath} {dup type /arraytype eq {exec} {12
	string cvs true charpath flattenpath} ifelse} ifelse} repeat
	CRx /CRx {padding aload pop just 1280 and 0 gt {blockwid exch sub just
	1024 and 0 gt {0.5 mul} if} {pop 0} ifelse 0 rmoveto numlines 1 sub
	dup /numlines exch def array astore /padding exch def} def exch pop
	pathbbox grestore 4 copy pop exch pop exch sub /blockwid exch def
	3 -1 roll pop 3 1 roll just 1 and 0 gt {just 2 and
	0 gt {exch pop neg fspc sub} {exch sub 0.5 mul neg} ifelse} {pop neg
	fspc add} ifelse exch Bline exch just 4 and 0 gt {just 8 and 0 gt
	{exch pop neg fspc sub} {add 0.5 mul neg} ifelse} {pop neg fspc add}
	ifelse rotval rotate Kn currentpoint translate /showflag 1 def /Bline
	0 def /Tabs 0 array def /fscale 1.0 def /kY 0 def CRx {dup type
	/stringtype eq {mshow} {dup type /arraytype eq {exec} {12 string cvs
	mshow} ifelse} ifelse} repeat grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog
% XCircuit output starts here.

%%BeginSetup

/analog::opamp {
begingate
0 1.250 -80 -80 -80 80 80 0 3 polygon
1.000 0.000 0.000 scb
(in.m) {/Times-Roman cf} 2 7 0.000 1.000 -80 48 pinlabel
(in.p) {/Times-Roman cf} 2 7 0.000 1.000 -80 -48 pinlabel
(out) {/Times-Roman cf} 2 4 0.000 1.000 80 0 pinlabel
sce
1 1.250 -72 32 -56 32 2 polygon
1 1.250 -72 -32 -56 -32 2 polygon
1 1.250 -64 -40 -64 -24 2 polygon
1 1.250 -16 32 0 32 2 polygon
1 1.250 -8 24 -8 40 2 polygon
1 1.250 -16 -32 0 -32 2 polygon
endgate
} def

/analog::capacitor {
begingate
1 1.250 0 -64 0 -12 2 polygon
1 1.250 0 64 0 6 2 polygon
1 1.250 -32 6 32 6 2 polygon
1.000 0.000 0.000 scb
(c.1) {/Times-Roman cf} 2 9 0.000 1.000 0 64 pinlabel
(c.2) {/Times-Roman cf} 2 13 0.000 1.000 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:C%i %pc.1 %pc.2 1.0P) {/Times-Roman cf} 2 0 0.000 1.000 -208 -160 
infolabel
(sim:c %pc.1 %pc.2) {/Times-Roman cf} 2 0 0.000 1.000 -208 -208 infolabel
sce
0 1.250 -32 -4 -32 -12 32 -12 32 -4 4 polygon
endgate
} def

/generic::circle {
% trivial
begingate
1 1.250 16 0 6 0.000 360.000 xcarc
1 1.250 0 0 10 0 2 polygon
1.000 0.000 0.000 scb
(out) {/Times-Roman cf} 2 4 -0.000 1.000 16 0 pinlabel
(out) {/Times-Roman cf} 2 7 -0.000 1.000 0 0 pinlabel
endgate
} def

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/analog::switch {
% trivial
begingate
1 1.300 32 32 2 -43 2 polygon
1 0.600 0 -48 57 49.000 90.000 xcarc
-1.000 /sv 90.000 0 -64 generic::circle
0.600 /sv 270.000 -12 8 generic::arrowhead
1.000 90.000 0 48 generic::circle
1.000 0.000 0.000 scb
(sw.1) {/Times-Roman cf} 2 9 0.000 1.000 0 48 pinlabel
(sw.2) {/Times-Roman cf} 2 13 0.000 1.000 0 -64 pinlabel
endgate
} def

/analog::gnd {
% trivial
begingate
1 1.250 0 0 0 -32 2 polygon
1 1.250 -32 -32 32 -32 2 polygon
1 1.250 -18 -46 18 -46 2 polygon
1 1.250 -4 -60 4 -60 2 polygon
0.933 0.604 0.000 scb
(GND) {/Times-Roman cf} 2 1 0.000 1.000 0 0 pinglobal
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 -0.000 1.000 0 0 pinlabel
endgate
} def

/analog::_gnd {
% trivial
begingate
1 1.000 0 0 0 -32 2 polygon
1 1.000 -32 -32 32 -32 2 polygon
1 1.000 -18 -46 18 -46 2 polygon
1 1.000 -4 -60 4 -60 2 polygon
0.933 0.604 0.000 scb
(GND) {/Times-Roman cf} 2 1 0.000 1.000 0 0 pinglobal
endgate
} def


%%EndSetup

%%Page: sigma-delta-modes-integration 1
%%PageOrientation: Portrait
/pgsave save def bop
% 32.00 4.00 gridspace
1.0000 inchscale
2.6000 setlinewidth 724 321 translate

1.000 0.000 80 0 analog::opamp
1.000 270.000 64 144 analog::capacitor
1 1.250 96 32 160 32 160 144 128 144 4 polygon
1 1.250 160 144 160 224 32 224 3 polygon
1.000 270.000 -32 224 analog::switch
1 1.250 0 32 -96 32 -96 224 -80 224 4 polygon
1 1.250 -80 144 -96 144 2 polygon
1.000 90.000 288 32 analog::capacitor
1 1.250 160 32 224 32 2 polygon
1.000 270.000 320 32 analog::gnd
1 1.250 96 -32 160 -32 2 polygon
1 1.250 0 -32 -96 -32 2 polygon
5 1.000 -96 -32 -128 -32 2 polygon
5 1.000 160 -32 192 -32 2 polygon
1 1.000 772 -32 768 0 800 0 768 -32 spline
1 1.000 840 0 832 32 864 32 832 0 spline
1 1.000 900 32 896 64 928 64 896 32 spline
1 1.000 708 -64 704 -32 736 -32 704 -64 spline
1 1.000 700 288 708 256 2 polygon
1 1.000 700 256 708 288 2 polygon
1 1.000 636 288 644 256 2 polygon
1 1.000 636 256 644 288 2 polygon
1 1.000 764 288 772 256 2 polygon
1 1.000 764 256 772 288 2 polygon
1 1.000 828 288 836 256 2 polygon
1 1.000 828 256 836 288 2 polygon
1 1.000 892 288 900 256 2 polygon
1 1.000 892 256 900 288 2 polygon
1 1.000 956 288 964 256 2 polygon
1 1.000 956 256 964 288 2 polygon
1 1.000 644 288 700 288 2 polygon
1 1.000 644 256 700 256 2 polygon
1 1.000 708 288 764 288 2 polygon
1 1.000 708 256 764 256 2 polygon
1 1.000 772 288 828 288 2 polygon
1 1.000 772 256 828 256 2 polygon
1 1.000 836 288 892 288 2 polygon
1 1.000 836 256 892 256 2 polygon
1 1.000 900 288 956 288 2 polygon
1 1.000 900 256 956 256 2 polygon
1 1.000 964 288 1020 288 2 polygon
1 1.000 964 256 1020 256 2 polygon
1 1.000 580 288 636 288 2 polygon
1 1.000 580 256 636 256 2 polygon
1 1.000 640 -64 580 -64 2 polygon
(Residue) {/Helvetica cf} 2 16 0.000 0.800 440 8 label
(Clock Cycle) {/Helvetica cf} 2 16 0.000 0.800 396 260 label
(r) {ss} {/Helvetica cf} (F) {/Symbol cf} 5 16 0.000 0.800 -48 272 label
(r) {ss} {/Helvetica cf} (F) {/Symbol cf} 5 16 0.000 0.800 520 220 label
0.600 0.600 0.600 scb
(load) {ss} (C) {/Helvetica cf} 4 16 0.000 1.000 244 80 label
sce
(1) {/Helvetica cf} 2 16 0.000 0.600 664 264 label
(2) {/Helvetica cf} 2 16 0.000 0.600 728 264 label
(3) {/Helvetica cf} 2 16 0.000 0.600 792 264 label
(4) {/Helvetica cf} 2 16 0.000 0.600 856 264 label
(5) {/Helvetica cf} 2 16 0.000 0.600 920 264 label
(1) {/Helvetica cf} 2 16 0.000 0.600 984 264 label
1 1.000 576 -64 1056 -64 2 polygon
1 1.000 576 -64 576 100 2 polygon
0.600 90.000 1072 -44 generic::arrowhead
0.600 0.000 576 116 generic::arrowhead
(time [ns]) {/Helvetica cf} 2 16 0.000 0.500 772 -112 label
1 1.000 640 -64 640 -68 2 polygon
1 1.000 704 -64 704 -68 2 polygon
1 1.000 768 -64 768 -68 2 polygon
1 1.000 832 -64 832 -68 2 polygon
1 1.000 896 -64 896 -68 2 polygon
1 1.000 960 -64 960 -68 2 polygon
1 1.000 1024 -64 1024 -68 2 polygon
(clk) {ss} (T) {/Helvetica cf} 4 16 0.000 0.400 636 -84 label
(2) {/Helvetica cf} 2 16 0.000 0.400 692 -84 label
(3) {/Helvetica cf} 2 16 0.000 0.400 756 -84 label
(4) {/Helvetica cf} 2 16 0.000 0.400 820 -84 label
(5) {/Helvetica cf} 2 16 0.000 0.400 884 -84 label
(6) {/Helvetica cf} 2 16 0.000 0.400 948 -84 label
(clk) {ss} (T) {/Helvetica cf} 4 16 0.000 0.400 700 -84 label
(clk) {ss} (T) {/Helvetica cf} 4 16 0.000 0.400 764 -84 label
(clk) {ss} (T) {/Helvetica cf} 4 16 0.000 0.400 828 -84 label
(clk) {ss} (T) {/Helvetica cf} 4 16 0.000 0.400 892 -84 label
(clk) {ss} (T) {/Helvetica cf} 4 16 0.000 0.400 956 -84 label
(clk) {ss} (T) {/Helvetica cf} 4 16 0.000 0.400 1020 -84 label
(7) {/Helvetica cf} 2 16 0.000 0.400 1012 -84 label
0.400 0.400 0.400 scb
5 0.500 640 272 640 -12 2 polygon
5 0.500 704 272 704 -12 2 polygon
5 0.500 768 272 768 -12 2 polygon
5 0.500 832 272 832 -12 2 polygon
5 0.500 896 272 896 -12 2 polygon
5 0.500 960 272 960 -12 2 polygon
sce
1 1.250 32 144 -80 144 2 polygon
1 1.000 576 244 636 244 700 244 704 212 960 212 964 244 1024 244 7 polygon
1 1.000 736 -32 768 -32 2 polygon
1 1.000 800 0 832 0 2 polygon
1 1.000 864 32 896 32 2 polygon
1 1.000 928 64 960 64 2 polygon
1 1.000 960 -72 960 -64 1024 -64 960 64 spline
0.600 0.600 0.600 scb
(I) {ss} (C) {/Helvetica cf} 4 16 0.000 1.000 88 176 label
sce
1.000 90.000 -320 32 analog::capacitor
1.000 0.000 0.000 scb
0.750 270.000 -220 32 analog::switch
0.000 0.000 1.000 scb
0.750 360.000 -276 -36 analog::switch
1.000 0.000 0.000 scb
-0.750 360.000 -368 -36 analog::switch
0.000 0.000 1.000 scb
0.750 270.000 -432 32 analog::switch
sce
1.000 0.000 -276 32 generic::dot
1.000 0.000 -368 32 generic::dot
1 1.250 -276 0 -276 32 2 polygon
1 1.250 -368 0 -368 32 2 polygon
0.500 0.000 -276 -76 analog::_gnd
(FB) {ss} (V) {/Helvetica cf} 4 16 0.000 1.000 -404 -120 label
(in) {ss} (V) {/Helvetica cf} 4 16 0.000 1.000 -532 24 label
0.000 0.000 1.000 scb
(1) {ss} (F) {/Symbol cf} 4 16 0.000 0.800 -436 68 label
1.000 0.000 0.000 scb
(2) {ss} (F) {/Symbol cf} 4 16 0.000 0.800 -228 68 label
0.000 0.000 1.000 scb
(1) {ss} (F) {/Symbol cf} 4 16 0.000 0.800 -240 -52 label
1.000 0.000 0.000 scb
(2) {ss} (F) {/Symbol cf} 4 16 0.000 0.800 -440 -52 label
sce
1 1.250 -172 32 -96 32 2 polygon
1.000 0.000 -96 32 generic::dot
1 1.000 672 168 676 200 700 200 704 168 736 168 740 200 764 200 768 168 800 168 
804 200 828 200 832 168 864 168 868 200 892 200 896 168 928 168 932 200 956 200 
960 168 992 168 21 polygon
1 1.000 992 168 996 200 1024 200 3 polygon
1 1.000 672 168 640 168 636 200 576 200 4 polygon
0.000 0.000 1.000 scb
(1) {ss} (F) {/Symbol cf} 4 16 0.000 0.800 520 176 label
1.000 0.000 0.000 scb
(2) {ss} (F) {/Symbol cf} 4 16 0.000 0.800 520 132 label
sce
1 1.000 576 128 640 128 644 160 668 160 672 128 704 128 708 160 732 160 736 128 
768 128 772 160 796 160 800 128 832 128 836 160 860 160 864 128 896 128 900 160 
924 160 928 128 960 128 964 160 988 160 992 128 1024 128 26 polygon
0.600 0.600 0.600 scb
(S) {ss} (C) {/Helvetica cf} 4 16 0.000 1.000 -344 84 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
